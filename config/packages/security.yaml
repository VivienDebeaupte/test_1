security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        backend_users:
            memory:
                users:
                    admin: { password: '$2y$13$l0IQ8Sboc4MM0AS14K2.MOWvQAezGtfBl1IXX6IBmianhi0OHom4C', roles: [ 'ROLE_ADMIN' ] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            security: true
            provider: backend_users
            logout:
                path: admin_logout
                # where to redirect after logout
                target: admin_login
            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_dashboard
                enable_csrf: true


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
